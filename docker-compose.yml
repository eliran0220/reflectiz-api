version: '3.8'
services: 
  mysqldb:
    image: mysql:8.0
    restart: always
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      TZ: "Asia/Kolkata"
    ports:
      - $MYSQL_LOCAL_PORT:$MYSQL_DOCKER_PORT
    volumes: 
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql  
      - db-backup:/data_backup/data
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  myapp:
    build:
      context: .
      dockerfile: ./API.Dockerfile
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    volumes: 
      - ./src:/home/node/app/src
      - ./nodemon.json:/home/node/app/nodemon.json
    depends_on:
      mysqldb:
        condition: service_healthy
    stdin_open: true
    tty: true
    command: npm run dev
    
  # cron:
  #   build:
  #     context: '../reflectizService/'
  #     dockerfile: ./Dockerfile
  #   volumes:
  #       - ./src:/home/schedueler/app/src
  #   ports:
  #       - 3001:3001
  #   depends_on:
  #     myapp:
  #       condition: service_healthy
  #   command: npm run dev
    
  

#   cron:
#     build:
#       context: '../reflectizService/'
#       dockerfile: ./Schedueler.Dockerfile
#     networks:
#       - mynetwork
#     volumes:
#         - ./src:/home/schedueler/app/src
#     ports:
#         - 3001:3001
#     depends_on:
#       myapp:
#         condition: service_healthy
#     command: npm run dev
# networks:
#   mynetwork:
#     driver: bridge
#     ipam:
#       driver: default


volumes: 
  db-config:
  db-data:
  db-backup: